// <auto-generated />
using System;
using Lab5.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab5.Migrations
{
    [DbContext(typeof(DealsFinderDbContext))]
    [Migration("20250411155635_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab5.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("Lab5.Models.Deal", b =>
                {
                    b.Property<int>("DealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DealId"));

                    b.Property<string>("FoodDeliveryServiceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DealId");

                    b.HasIndex("FoodDeliveryServiceId");

                    b.ToTable("Deal", (string)null);
                });

            modelBuilder.Entity("Lab5.Models.FoodDeliveryService", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("money");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FoodDeliveryService", (string)null);
                });

            modelBuilder.Entity("Lab5.Models.Subscription", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("FoodDeliveryServiceId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CustomerId", "FoodDeliveryServiceId");

                    b.HasIndex("FoodDeliveryServiceId");

                    b.ToTable("Subscription", (string)null);
                });

            modelBuilder.Entity("Lab5.Models.Deal", b =>
                {
                    b.HasOne("Lab5.Models.FoodDeliveryService", "FoodDeliveryService")
                        .WithMany("Deal")
                        .HasForeignKey("FoodDeliveryServiceId");

                    b.Navigation("FoodDeliveryService");
                });

            modelBuilder.Entity("Lab5.Models.Subscription", b =>
                {
                    b.HasOne("Lab5.Models.Customer", "Customer")
                        .WithMany("Subscription")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab5.Models.FoodDeliveryService", "FoodDeliveryService")
                        .WithMany("Subscription")
                        .HasForeignKey("FoodDeliveryServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("FoodDeliveryService");
                });

            modelBuilder.Entity("Lab5.Models.Customer", b =>
                {
                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Lab5.Models.FoodDeliveryService", b =>
                {
                    b.Navigation("Deal");

                    b.Navigation("Subscription");
                });
#pragma warning restore 612, 618
        }
    }
}
